# Generated by Django 5.2.7 on 2025-10-23 18:03

import django.core.validators
import produit.models
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Ad',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200, verbose_name='Titre')),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('description', models.TextField(verbose_name='Description')),
                ('category', models.CharField(blank=True, choices=[('vehicules', 'Véhicules'), ('emploi_stages', "Offres d'emploi & Stages"), ('immobilier', 'Immobilier & Foncier'), ('electronique', 'Électronique & Multimédia'), ('maison_jardin', 'Maison & Jardin'), ('mode_beaute', 'Mode, Vêtements & Beauté'), ('sport_loisirs', 'Sport, Loisirs & Culture'), ('services', 'Services & Formation'), ('materiaux_pro', 'Matériaux & Équipements Pro'), ('agroalimentaire', 'Agroalimentaire & Produits locaux'), ('autre', 'Autre')], max_length=50, null=True, verbose_name='Catégorie')),
                ('city', models.CharField(blank=True, choices=[('abidjan', 'Abidjan'), ('yamoussoukro', 'Yamoussoukro'), ('bouake', 'Bouaké'), ('daloa', 'Daloa'), ('san_pedro', 'San-Pedro'), ('korhogo', 'Korhogo'), ('man', 'Man'), ('divo', 'Divo'), ('gagnoa', 'Gagnoa'), ('abengourou', 'Abengourou'), ('anyama', 'Anyama'), ('agboville', 'Agboville'), ('grand_bassam', 'Grand-Bassam'), ('dabou', 'Dabou'), ('boundiali', 'Boundiali'), ('odienne', 'Odienné'), ('soubre', 'Soubré'), ('bingerville', 'Bingerville'), ('sassandra', 'Sassandra'), ('issia', 'Issia'), ('autre', 'Autre')], max_length=50, null=True, verbose_name='Ville')),
                ('ad_type', models.CharField(choices=[('sell', 'Vendre'), ('buy', 'Acheter'), ('rent', 'Louer'), ('offer_service', 'Offrir un service'), ('seek_service', 'Chercher un service'), ('job_offer', "Offre d'emploi"), ('job_seek', "Recherche d'emploi")], default='sell', max_length=20)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Prix')),
                ('currency', models.CharField(default='XOF', max_length=3)),
                ('is_negotiable', models.BooleanField(default=True)),
                ('address', models.CharField(blank=True, max_length=255)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('status', models.CharField(choices=[('draft', 'Brouillon'), ('active', 'Active'), ('sold', 'Vendu'), ('expired', 'Expirée'), ('suspended', 'Suspendue'), ('rejected', 'Rejetée')], default='draft', max_length=20)),
                ('is_featured', models.BooleanField(default=False)),
                ('is_urgent', models.BooleanField(default=False)),
                ('views_count', models.PositiveIntegerField(default=0)),
                ('favorites_count', models.PositiveIntegerField(default=0)),
                ('contact_phone', models.CharField(blank=True, max_length=20)),
                ('contact_email', models.EmailField(blank=True, max_length=254)),
                ('whatsapp_number', models.CharField(blank=True, max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('expires_at', models.DateTimeField()),
                ('published_at', models.DateTimeField(blank=True, null=True)),
                ('is_moderated', models.BooleanField(default=False)),
                ('moderated_at', models.DateTimeField(blank=True, null=True)),
                ('rejection_reason', models.TextField(blank=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AdAttribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField()),
                ('input_type', models.CharField(choices=[('text', 'Texte'), ('number', 'Nombre'), ('choice', 'Choix unique'), ('multiple_choice', 'Choix multiple'), ('boolean', 'Oui/Non'), ('date', 'Date')], max_length=20)),
                ('is_required', models.BooleanField(default=False)),
                ('is_filterable', models.BooleanField(default=True)),
                ('order', models.PositiveIntegerField(default=0)),
            ],
            options={
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='AdAttributeChoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=100)),
                ('order', models.PositiveIntegerField(default=0)),
            ],
            options={
                'ordering': ['order', 'value'],
            },
        ),
        migrations.CreateModel(
            name='AdAttributeValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='AdImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(help_text='Formats acceptés: jpg, jpeg, png, gif, webp. Taille max: 5Mo', upload_to='ads/images/%Y/%m/%d/', validators=[produit.models.validate_image_size, django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png', 'gif', 'webp'])])),
                ('caption', models.CharField(blank=True, max_length=200)),
                ('order', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('is_primary', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['order', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='AdReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.CharField(choices=[('spam', 'Spam'), ('fraud', 'Fraude'), ('inappropriate', 'Contenu inapproprié'), ('wrong_category', 'Mauvaise catégorie'), ('duplicate', 'Doublon'), ('other', 'Autre')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('is_resolved', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Advertisement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Titre de la publicité')),
                ('link', models.URLField(verbose_name='Lien de destination')),
                ('image', models.ImageField(help_text='Taille maximale: 2Mo. Formats acceptés: jpg, jpeg, png, gif', upload_to='publicite/%Y/%m/', validators=[produit.models.validate_ad_image_size, django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png', 'gif'])], verbose_name='Affiche publicitaire')),
                ('duration_hours', models.PositiveIntegerField(default=24, help_text='Durée en heures (minimum 24h)', validators=[django.core.validators.MinValueValidator(24)])),
                ('price_per_day', models.DecimalField(decimal_places=2, default=1000, max_digits=10, verbose_name='Prix par jour (FCFA)')),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Prix total')),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=False)),
                ('is_approved', models.BooleanField(default=False)),
                ('impressions', models.PositiveIntegerField(default=0, verbose_name="Nombre d'affichages")),
                ('clicks', models.PositiveIntegerField(default=0, verbose_name='Nombre de clics')),
            ],
            options={
                'verbose_name': 'Publicité',
                'verbose_name_plural': 'Publicités',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AdView',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(unique=True)),
                ('icon', models.CharField(blank=True, max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('order', models.PositiveIntegerField(default=0)),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
            ],
            options={
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
    ]
